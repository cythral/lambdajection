<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <TargetFramework>net6.0</TargetFramework>
        <PackageId>Lambdajection.Layer</PackageId>
        <AssemblyName>$(PackageId)</AssemblyName>
        <NoWarn>NU5128</NoWarn>
        <PackageDescription>Runtime package store layer for Lambdajection.</PackageDescription>
        <SuppressDependenciesWhenPacking>true</SuppressDependenciesWhenPacking>
        <IncludeBuildOutput>false</IncludeBuildOutput>
        <RestoreProjectStyle>PackageReference</RestoreProjectStyle>
        <GeneratePackageOnBuild>false</GeneratePackageOnBuild>
        <BeforePack>CreateStore;$(BeforePack)</BeforePack>
    </PropertyGroup>

    <ItemGroup>
        <None Include="build/**" Pack="true" PackagePath="build/" />
        <None Include="Layer.template.yml" CopyToOutputDirectory="always" />
        <ContentWithTargetPath Include="../../README.md" CopyToOutputDirectory="always" TargetPath="layer/README.md" />
        <ContentWithTargetPath Include="../../LICENSE.txt" CopyToOutputDirectory="always" TargetPath="layer/LICENSE.txt" />
        <ContentWithTargetPath Include="./THIRD-PARTY-NOTICES.txt" CopyToOutputDirectory="always" TargetPath="layer/THIRD-PARTY-NOTICES.txt" />
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="Cythral.CloudFormation.BuildTasks" Version="0.5.3" PrivateAssets="all" />
        <ProjectReference Include="../Generator/Generator.csproj" ReferenceOutputAssembly="false" />
        <ProjectReference Include="../Attributes/Attributes.csproj" PrivateAssets="runtime" />
    </ItemGroup>

    <Target Name="CreateStore" DependsOnTargets="GetBuildVersion;ResolvePackageAssets">
        <PropertyGroup>
            <ReferencePaths>@(ReferencePath, '%253B')</ReferencePaths>
        </PropertyGroup>

        <ItemGroup>
            <StoreArgs Include="--manifest $(MSBuildThisFileDirectory)/Manifest/Manifest.csproj" />
            <StoreArgs Include="--output $(OutputPath)/layer" />
            <StoreArgs Include="--runtime linux-x64" />
            <!-- Optimized runtime package stores does not work on .NET 6 -->
            <StoreArgs Include="--skip-optimization" />
            <StoreArgs Include="/p:Configuration=$(Configuration)" />
            <StoreArgs Include="/p:LambdajectionVersion=$(PackageVersion)" />
            <StoreArgs Include="-nodereuse:false" />
        </ItemGroup>

        <MakeDir Directories="$(MSBuildThisFileDirectory)Manifest/.nuget" />

        <PropertyGroup>
            <DirectoriesToRemove>$([System.IO.Directory]::GetDirectories('$(MSBuildThisFileDirectory)Manifest/.nuget', 'lambdajection*'))</DirectoriesToRemove>
            <DirectoriesToRemove>$([System.IO.Directory]::GetDirectories('$(MSBuildThisFileDirectory)Manifest/.nuget', 'microsoft.aspnetcore.app.runtime.linux-x64'))</DirectoriesToRemove>
        </PropertyGroup>

        <RemoveDir Directories="$(DirectoriesToRemove)" />
        <Exec Command="dotnet store @(StoreArgs, ' ')" StandardOutputImportance="low" />

        <ItemGroup>
            <Content Include="$(OutputPath)layer/x64/net6.0/artifact.xml" />
        </ItemGroup>
    </Target>

    <Target Name="PackLayer" AfterTargets="Pack" Condition="$(UPLOAD_LAYER_TEMPLATE) == 'true'">
        <PropertyGroup>
            <BucketExportName>lambdajection-infrastructure:LayerBucket</BucketExportName>
            <TemplateFilePath Condition="$(TemplateFilePath) == ''">$(OutputPath)Layer.template.yml</TemplateFilePath>
            <OutputLayerTemplateFilePath Condition="$(OutputLayerTemplateFilePath) == ''">$(OutputPath)Layer.template.yml.packaged</OutputLayerTemplateFilePath>
        </PropertyGroup>

        <!-- Get the Layer Bucket Name -->
        <Exec Command="aws cloudformation list-exports --query Exports[?Name==\`$(BucketExportName)\`].Value --output text" ConsoleToMsBuild="true" StandardOutputImportance="low">
            <Output TaskParameter="ConsoleOutput" PropertyName="LayerBucket" />
        </Exec>

        <PackageTemplate TemplateFile="$(TemplateFilePath)" PackageBucket="$(LayerBucket)" OutputTemplateFile="$(OutputLayerTemplateFilePath)" />
    </Target>
</Project>